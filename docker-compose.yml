services:
  # postgresql database
  postgres:
    image: postgres:16-alpine
    container_name: ecom-payments-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecom_payments
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecom-network

  # rabbitmq message broker
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: ecom-payments-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"   # amqp protocol
      - "15672:15672" # management ui
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecom-network

  # nestjs backend service
  backend:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
    container_name: ecom-payments-backend
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: ecom_payments
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - ecom-network
    restart: unless-stopped

  # nextjs dashboard service
  dashboard:
    build:
      context: .
      dockerfile: ./apps/dashboard/Dockerfile
    container_name: ecom-payments-dashboard
    environment:
      NODE_ENV: production
      BACKEND_URL: http://backend:3001
      NEXT_PUBLIC_BACKEND_URL: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - ecom-network
    restart: unless-stopped

volumes:
  postgres_data:
  rabbitmq_data:

networks:
  ecom-network:
    driver: bridge
